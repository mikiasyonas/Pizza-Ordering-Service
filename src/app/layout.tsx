import type { Metadata } from 'next';
import localFont from 'next/font/local';
import './globals.css';
import { AppRouterCacheProvider } from '@mui/material-nextjs/v14-appRouter';
import { StyledRoot } from './StyledRoot';
import { getSession } from '@/config/authOptions';
import { prisma } from '@/prisma/client';
import { redirect } from 'next/navigation';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const serverSession = await getSession();

  if (!serverSession) {
    redirect('/login');
  }

  if (serverSession) {
    const userInRestaurant = await prisma.role.findUnique({
      where: {
        userId: serverSession.user?.id,
      },
    });

    if (!userInRestaurant) {
      redirect('/login');
    }
  }
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <AppRouterCacheProvider>
          <StyledRoot>{children}</StyledRoot>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
